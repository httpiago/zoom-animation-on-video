{"version":3,"sources":["utils.ts","player.ts","main.ts"],"names":[],"mappings":"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","file":"main.b7fe6f45.js","sourceRoot":"..\\src","sourcesContent":["// Firefox 1.0+. Stolen from https://stackoverflow.com/a/9851769/2789759\r\n// @ts-ignore\r\nexport const isFirefox = typeof InstallTrigger !== 'undefined'\r\n\r\n// @ts-ignore\r\nexport const checkIsFullScreen = () => (document.fullScreen || document.mozFullScreen || document.webkitIsFullScreen || document.msFullscreenElement || false) as boolean\r\n\r\nexport const checkIsMobile = () => window.innerWidth < 640\r\n\r\n/**\r\n * Calcular a nova altura respeitando a proporção.\r\n *\r\n * @param {number} maxWidth \r\n * @return {number} relativeHeight\r\n *\r\n * @example\r\n * calcWidthAspectRatio(400) // 640\r\n */\r\nexport function calcWidthAspectRatio(maxWidth: number): number {\r\n  let relativeHeight = Math.round((maxWidth / 16) * 9) // Aspect Ratio 16:9\r\n  return relativeHeight\r\n}\r\n\r\nexport function zoomIn(element: HTMLElement) {\r\n  let { left, top, width, height } = element.getBoundingClientRect()\r\n  const scale = Math.max(Math.min( window.innerWidth / width, window.innerHeight / height ), 1)\r\n\r\n  left *= scale\r\n  top *= scale\r\n\r\n  return magnify(scale, { left, top, width, height })\r\n}\r\n\r\nexport function zoomOut(element: HTMLElement) {\r\n  return magnify(1)\r\n}\r\n\r\ntype Rect = {\r\n  width: number;\r\n  height: number;\r\n  top: number;\r\n  left: number;\r\n}\r\n\r\n/**\r\n * @see https://github.com/hakimel/zoom.js/blob/master/js/zoom.js\r\n */\r\nfunction magnify(scale: number, rect?: Rect) {\r\n  return new Promise((resolve, reject) => {\r\n    const TRANSITION_DURATION = 800\r\n    const scrollOffset = {\r\n      left: window.scrollX !== undefined ? window.scrollX : window.pageXOffset,\r\n      top: window.scrollY !== undefined ? window.scrollY : window.pageYOffset\r\n    }\r\n  \r\n    if (scale === 1) {\r\n      // Zoom out\r\n      document.body.style.transform = '';\r\n    }\r\n    else {\r\n      // Zoom in. Center the rect within the zoomed viewport\r\n      rect.left -= ( window.innerWidth - ( rect.width * scale ) ) / 2\r\n      rect.top -= ( window.innerHeight - ( rect.height * scale ) ) / 2\r\n    \r\n      const origin = `${scrollOffset.left}px ${scrollOffset.top}px`\r\n      const transform = `translate(${-rect.left}px,${-rect.top}px) scale(${scale})`\r\n      const transition = `transform ${TRANSITION_DURATION}ms ease`\r\n\r\n      document.body.style.transformOrigin = origin;\r\n      document.body.style.transform = transform;\r\n      document.body.style.transition = transition;\r\n    }\r\n\r\n    // Resolve the promise after the transition\r\n    setTimeout(resolve, TRANSITION_DURATION);\r\n  })\r\n}\r\n","import { checkIsFullScreen, checkIsMobile, isFirefox, zoomIn, zoomOut, calcWidthAspectRatio } from './utils';\r\n\r\nexport default class Player {\r\n  public ytplayer: YT.Player;\r\n\r\n  private wrapper = document.querySelector<HTMLElement>('.video__wrapper');\r\n  private iframe = this.wrapper.querySelector<HTMLIFrameElement>('#ytplayer');\r\n  private overlay = this.wrapper.querySelector<HTMLElement>('.video__overlay');\r\n\r\n  private isFullscreen: boolean = false;\r\n  private height: number;\r\n  private width: number;\r\n\r\n  constructor(private videoId: string) {\r\n    // Init YouTube Player\r\n    // See more: https://developers.google.com/youtube/iframe_api_reference\r\n    this.ytplayer = new YT.Player(this.iframe, {\r\n      videoId: this.videoId,\r\n      height: 1,\r\n      width: 1,\r\n      playerVars: {\r\n        controls: 0,\r\n      },\r\n      events: {\r\n        'onReady': () => this.onInit(),\r\n        'onStateChange': (event) => {\r\n          // switch (event.data) {\r\n          //   case YT.PlayerState.PLAYING: return this.onPlay();\r\n          // }\r\n        },\r\n      }\r\n    })\r\n  }\r\n\r\n  private onInit() {\r\n    this.iframe = this.wrapper.querySelector<HTMLIFrameElement>('#ytplayer')\r\n\r\n    this.calcPlayerSize()\r\n    window.addEventListener('resize', () => this.calcPlayerSize())\r\n\r\n    this.overlay.addEventListener('click', () => this.onPlay())\r\n\r\n    this.iframe.addEventListener('fullscreenchange', () => {\r\n      this.isFullscreen = checkIsFullScreen()\r\n\r\n      if (this.isFullscreen === false) this.onExitFullScreen()\r\n\r\n      console.log('this.isFullscreen', this.isFullscreen)\r\n    })\r\n  }\r\n\r\n  private async onPlay() {\r\n    // Check if the player is already fullscreen\r\n    if (this.isFullscreen === true) return;\r\n\r\n    // Hide the video overlay\r\n    this.overlay.style.display = 'none'\r\n    this.ytplayer.playVideo()\r\n\r\n    if (checkIsMobile()) {\r\n      return this.requestFullScreen()\r\n    }\r\n\r\n    if (isFirefox) {\r\n      // Solicitar o fullscreen\r\n      this.requestFullScreen()\r\n      // Iniciar o zoom in\r\n      zoomIn(this.wrapper)\r\n    } else {\r\n      // Iniciar o zoom in\r\n      await zoomIn(this.wrapper)\r\n      // Solicitar o fullscreen\r\n      this.requestFullScreen()\r\n    }\r\n  }\r\n\r\n  private async onExitFullScreen() {\r\n    this.ytplayer.pauseVideo()\r\n\r\n    if (!checkIsMobile()) {\r\n      // Iniciar o zoom out\r\n      await zoomOut(this.wrapper)\r\n    }\r\n\r\n    // Voltar a mostrar o botão de play\r\n    this.overlay.style.display = ''\r\n  }\r\n\r\n  private requestFullScreen() {\r\n    // @ts-ignore\r\n    const requestFullscreen = this.iframe.requestFullscreen || this.iframe.mozRequestFullscreen || this.iframe.webkitRequestFullscreen\r\n    \r\n    if (requestFullscreen) requestFullscreen.bind(this.iframe)()\r\n  }\r\n\r\n  private calcPlayerSize() {\r\n    const fortyPercentOfWindowWidth = (0.4 * window.innerWidth)\r\n    const windowWidthWithoutPadding = (window.innerWidth - (30 * 2))\r\n\r\n    this.width = checkIsMobile() ? windowWidthWithoutPadding : fortyPercentOfWindowWidth\r\n    this.height = calcWidthAspectRatio(this.width)\r\n\r\n    this.wrapper.style.height = `${this.height}px`\r\n    this.wrapper.style.width = `${this.width}px`\r\n    this.iframe.style.height = `${this.height}px`\r\n    this.iframe.style.width = `${this.width}px`\r\n\r\n    document.body.classList.toggle('is-mobile', checkIsMobile())\r\n  }\r\n\r\n}","import { checkIsMobile } from './utils'\r\nimport Player from './player'\r\n\r\nconst videoId = 'ucAg5oeb0vE'\r\n\r\n// @ts-ignore\r\nwindow.onYouTubePlayerAPIReady = () => {\r\n  new Player(videoId)\r\n}\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  document.body.classList.toggle('is-mobile', checkIsMobile())\r\n})\r\n\r\ndocument.querySelector<HTMLElement>('.call-to-action')\r\n  .addEventListener('click', () => {\r\n    document.querySelector<HTMLElement>('.video__overlay').click()\r\n  })\r\n"]}